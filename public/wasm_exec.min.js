(()=>{if("undefined"!=typeof global);else if("undefined"!=typeof window)window.global=window;else{if("undefined"==typeof self)throw new Error("cannot export Go (neither global, window nor self is defined)");self.global=self}if(global.require||"undefined"==typeof require||(global.require=require),!global.fs&&global.require){const fs=require("fs");"object"==typeof fs&&null!==fs&&0!==Object.keys(fs).length&&(global.fs=fs)}const enosys=()=>{const err=new Error("not implemented");return err.code="ENOSYS",err};if(!global.fs){let outputBuf="";global.fs={constants:{O_WRONLY:-1,O_RDWR:-1,O_CREAT:-1,O_TRUNC:-1,O_APPEND:-1,O_EXCL:-1},writeSync(fd,buf){outputBuf+=decoder.decode(buf);const nl=outputBuf.lastIndexOf("\n");return-1!=nl&&(console.log(outputBuf.substr(0,nl)),outputBuf=outputBuf.substr(nl+1)),buf.length},write(fd,buf,offset,length,position,callback){if(0!==offset||length!==buf.length||null!==position)return void callback(enosys());const n=this.writeSync(fd,buf);callback(null,n)},chmod(path,mode,callback){callback(enosys())},chown(path,uid,gid,callback){callback(enosys())},close(fd,callback){callback(enosys())},fchmod(fd,mode,callback){callback(enosys())},fchown(fd,uid,gid,callback){callback(enosys())},fstat(fd,callback){callback(enosys())},fsync(fd,callback){callback(null)},ftruncate(fd,length,callback){callback(enosys())},lchown(path,uid,gid,callback){callback(enosys())},link(path,link,callback){callback(enosys())},lstat(path,callback){callback(enosys())},mkdir(path,perm,callback){callback(enosys())},open(path,flags,mode,callback){callback(enosys())},read(fd,buffer,offset,length,position,callback){callback(enosys())},readdir(path,callback){callback(enosys())},readlink(path,callback){callback(enosys())},rename(from,to,callback){callback(enosys())},rmdir(path,callback){callback(enosys())},stat(path,callback){callback(enosys())},symlink(path,link,callback){callback(enosys())},truncate(path,length,callback){callback(enosys())},unlink(path,callback){callback(enosys())},utimes(path,atime,mtime,callback){callback(enosys())}}}if(global.process||(global.process={getuid:()=>-1,getgid:()=>-1,geteuid:()=>-1,getegid:()=>-1,getgroups(){throw enosys()},pid:-1,ppid:-1,umask(){throw enosys()},cwd(){throw enosys()},chdir(){throw enosys()}}),!global.crypto&&global.require){const nodeCrypto=require("crypto");global.crypto={getRandomValues(b){nodeCrypto.randomFillSync(b)}}}if(!global.crypto)throw new Error("global.crypto is not available, polyfill required (getRandomValues only)");if(global.performance||(global.performance={now(){const[sec,nsec]=process.hrtime();return 1e3*sec+nsec/1e6}}),!global.TextEncoder&&global.require&&(global.TextEncoder=require("util").TextEncoder),!global.TextEncoder)throw new Error("global.TextEncoder is not available, polyfill required");if(!global.TextDecoder&&global.require&&(global.TextDecoder=require("util").TextDecoder),!global.TextDecoder)throw new Error("global.TextDecoder is not available, polyfill required");const encoder=new TextEncoder("utf-8"),decoder=new TextDecoder("utf-8");if(global.Go=class{constructor(){this.argv=["js"],this.env={},this.exit=code=>{0!==code&&console.warn("exit code:",code)},this._exitPromise=new Promise(resolve=>{this._resolveExitPromise=resolve}),this._pendingEvent=null,this._scheduledTimeouts=new Map,this._nextCallbackTimeoutID=1;const setInt64=(addr,v)=>{this.mem.setUint32(addr+0,v,!0),this.mem.setUint32(addr+4,Math.floor(v/4294967296),!0)},getInt64=addr=>{const low=this.mem.getUint32(addr+0,!0),high=this.mem.getInt32(addr+4,!0);return low+4294967296*high},loadValue=addr=>{const f=this.mem.getFloat64(addr,!0);if(0===f)return;if(!isNaN(f))return f;const id=this.mem.getUint32(addr,!0);return this._values[id]},storeValue=(addr,v)=>{const nanHead=2146959360;if("number"==typeof v&&0!==v)return isNaN(v)?(this.mem.setUint32(addr+4,nanHead,!0),void this.mem.setUint32(addr,0,!0)):void this.mem.setFloat64(addr,v,!0);if(void 0===v)return void this.mem.setFloat64(addr,0,!0);let id=this._ids.get(v);void 0===id&&(id=this._idPool.pop(),void 0===id&&(id=this._values.length),this._values[id]=v,this._goRefCounts[id]=0,this._ids.set(v,id)),this._goRefCounts[id]++;let typeFlag=0;switch(typeof v){case"object":null!==v&&(typeFlag=1);break;case"string":typeFlag=2;break;case"symbol":typeFlag=3;break;case"function":typeFlag=4}this.mem.setUint32(addr+4,nanHead|typeFlag,!0),this.mem.setUint32(addr,id,!0)},loadSlice=addr=>{const array=getInt64(addr+0),len=getInt64(addr+8);return new Uint8Array(this._inst.exports.mem.buffer,array,len)},loadSliceOfValues=addr=>{const array=getInt64(addr+0),len=getInt64(addr+8),a=new Array(len);for(let i=0;i<len;i++)a[i]=loadValue(array+8*i);return a},loadString=addr=>{const saddr=getInt64(addr+0),len=getInt64(addr+8);return decoder.decode(new DataView(this._inst.exports.mem.buffer,saddr,len))},timeOrigin=Date.now()-performance.now();this.importObject={go:{"runtime.wasmExit":sp=>{sp>>>=0;const code=this.mem.getInt32(sp+8,!0);this.exited=!0,delete this._inst,delete this._values,delete this._goRefCounts,delete this._ids,delete this._idPool,this.exit(code)},"runtime.wasmWrite":sp=>{const fd=getInt64((sp>>>=0)+8),p=getInt64(sp+16),n=this.mem.getInt32(sp+24,!0);fs.writeSync(fd,new Uint8Array(this._inst.exports.mem.buffer,p,n))},"runtime.resetMemoryDataView":sp=>{sp>>>=0,this.mem=new DataView(this._inst.exports.mem.buffer)},"runtime.nanotime1":sp=>{setInt64((sp>>>=0)+8,1e6*(timeOrigin+performance.now()))},"runtime.walltime1":sp=>{sp>>>=0;const msec=(new Date).getTime();setInt64(sp+8,msec/1e3),this.mem.setInt32(sp+16,msec%1e3*1e6,!0)},"runtime.scheduleTimeoutEvent":sp=>{sp>>>=0;const id=this._nextCallbackTimeoutID;this._nextCallbackTimeoutID++,this._scheduledTimeouts.set(id,setTimeout(()=>{for(this._resume();this._scheduledTimeouts.has(id);)console.warn("scheduleTimeoutEvent: missed timeout event"),this._resume()},getInt64(sp+8)+1)),this.mem.setInt32(sp+16,id,!0)},"runtime.clearTimeoutEvent":sp=>{sp>>>=0;const id=this.mem.getInt32(sp+8,!0);clearTimeout(this._scheduledTimeouts.get(id)),this._scheduledTimeouts.delete(id)},"runtime.getRandomData":sp=>{sp>>>=0,crypto.getRandomValues(loadSlice(sp+8))},"syscall/js.finalizeRef":sp=>{sp>>>=0;const id=this.mem.getUint32(sp+8,!0);if(this._goRefCounts[id]--,0===this._goRefCounts[id]){const v=this._values[id];this._values[id]=null,this._ids.delete(v),this._idPool.push(id)}},"syscall/js.stringVal":sp=>{storeValue((sp>>>=0)+24,loadString(sp+8))},"syscall/js.valueGet":sp=>{sp>>>=0;const result=Reflect.get(loadValue(sp+8),loadString(sp+16));sp=this._inst.exports.getsp()>>>0,storeValue(sp+32,result)},"syscall/js.valueSet":sp=>{sp>>>=0,Reflect.set(loadValue(sp+8),loadString(sp+16),loadValue(sp+32))},"syscall/js.valueDelete":sp=>{sp>>>=0,Reflect.deleteProperty(loadValue(sp+8),loadString(sp+16))},"syscall/js.valueIndex":sp=>{storeValue((sp>>>=0)+24,Reflect.get(loadValue(sp+8),getInt64(sp+16)))},"syscall/js.valueSetIndex":sp=>{sp>>>=0,Reflect.set(loadValue(sp+8),getInt64(sp+16),loadValue(sp+24))},"syscall/js.valueCall":sp=>{sp>>>=0;try{const v=loadValue(sp+8),m=Reflect.get(v,loadString(sp+16)),args=loadSliceOfValues(sp+32),result=Reflect.apply(m,v,args);sp=this._inst.exports.getsp()>>>0,storeValue(sp+56,result),this.mem.setUint8(sp+64,1)}catch(err){storeValue(sp+56,err),this.mem.setUint8(sp+64,0)}},"syscall/js.valueInvoke":sp=>{sp>>>=0;try{const v=loadValue(sp+8),args=loadSliceOfValues(sp+16),result=Reflect.apply(v,void 0,args);sp=this._inst.exports.getsp()>>>0,storeValue(sp+40,result),this.mem.setUint8(sp+48,1)}catch(err){storeValue(sp+40,err),this.mem.setUint8(sp+48,0)}},"syscall/js.valueNew":sp=>{sp>>>=0;try{const v=loadValue(sp+8),args=loadSliceOfValues(sp+16),result=Reflect.construct(v,args);sp=this._inst.exports.getsp()>>>0,storeValue(sp+40,result),this.mem.setUint8(sp+48,1)}catch(err){storeValue(sp+40,err),this.mem.setUint8(sp+48,0)}},"syscall/js.valueLength":sp=>{setInt64((sp>>>=0)+16,parseInt(loadValue(sp+8).length))},"syscall/js.valuePrepareString":sp=>{sp>>>=0;const str=encoder.encode(String(loadValue(sp+8)));storeValue(sp+16,str),setInt64(sp+24,str.length)},"syscall/js.valueLoadString":sp=>{const str=loadValue((sp>>>=0)+8);loadSlice(sp+16).set(str)},"syscall/js.valueInstanceOf":sp=>{sp>>>=0,this.mem.setUint8(sp+24,loadValue(sp+8)instanceof loadValue(sp+16)?1:0)},"syscall/js.copyBytesToGo":sp=>{const dst=loadSlice((sp>>>=0)+8),src=loadValue(sp+32);if(!(src instanceof Uint8Array||src instanceof Uint8ClampedArray))return void this.mem.setUint8(sp+48,0);const toCopy=src.subarray(0,dst.length);dst.set(toCopy),setInt64(sp+40,toCopy.length),this.mem.setUint8(sp+48,1)},"syscall/js.copyBytesToJS":sp=>{const dst=loadValue((sp>>>=0)+8),src=loadSlice(sp+16);if(!(dst instanceof Uint8Array||dst instanceof Uint8ClampedArray))return void this.mem.setUint8(sp+48,0);const toCopy=src.subarray(0,dst.length);dst.set(toCopy),setInt64(sp+40,toCopy.length),this.mem.setUint8(sp+48,1)},debug:value=>{console.log(value)}}}}async run(instance){if(!(instance instanceof WebAssembly.Instance))throw new Error("Go.run: WebAssembly.Instance expected");this._inst=instance,this.mem=new DataView(this._inst.exports.mem.buffer),this._values=[NaN,0,null,!0,!1,global,this],this._goRefCounts=new Array(this._values.length).fill(1/0),this._ids=new Map([[0,1],[null,2],[!0,3],[!1,4],[global,5],[this,6]]),this._idPool=[],this.exited=!1;let offset=4096;const strPtr=str=>{const ptr=offset,bytes=encoder.encode(str+"\0");return new Uint8Array(this.mem.buffer,offset,bytes.length).set(bytes),offset+=bytes.length,offset%8!=0&&(offset+=8-offset%8),ptr},argc=this.argv.length,argvPtrs=[];this.argv.forEach(arg=>{argvPtrs.push(strPtr(arg))}),argvPtrs.push(0);const keys=Object.keys(this.env).sort();keys.forEach(key=>{argvPtrs.push(strPtr(`${key}=${this.env[key]}`))}),argvPtrs.push(0);const argv=offset;argvPtrs.forEach(ptr=>{this.mem.setUint32(offset,ptr,!0),this.mem.setUint32(offset+4,0,!0),offset+=8});const wasmMinDataAddr=12288;if(offset>=12288)throw new Error("total length of command line and environment variables exceeds limit");this._inst.exports.run(argc,argv),this.exited&&this._resolveExitPromise(),await this._exitPromise}_resume(){if(this.exited)throw new Error("Go program has already exited");this._inst.exports.resume(),this.exited&&this._resolveExitPromise()}_makeFuncWrapper(id){const go=this;return function(){const event={id:id,this:this,args:arguments};return go._pendingEvent=event,go._resume(),event.result}}},"undefined"!=typeof module&&global.require&&global.require.main===module&&global.process&&global.process.versions&&!global.process.versions.electron){process.argv.length<3&&(console.error("usage: go_js_wasm_exec [wasm binary] [arguments]"),process.exit(1));const go=new Go;go.argv=process.argv.slice(2),go.env=Object.assign({TMPDIR:require("os").tmpdir()},process.env),go.exit=process.exit,WebAssembly.instantiate(fs.readFileSync(process.argv[2]),go.importObject).then(result=>(process.on("exit",code=>{0!==code||go.exited||(go._pendingEvent={id:0},go._resume())}),go.run(result.instance))).catch(err=>{console.error(err),process.exit(1)})}})();